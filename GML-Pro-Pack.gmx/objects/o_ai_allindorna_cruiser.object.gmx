<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_allindorna_cruiser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>o_uberparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ship_setup(id,s_allindorna_cruiser,s_allindorna_cruiser_sub,"Allindorna Battlecruiser");

hitpoints=1000;
totallife=1000;

maxvelocity=4;
accel=0.01;
decel=0.05;

cargo=30;
cargo_capacity=60;
crew=mincrew+(random(6)-3);
setup_cargo(id);

ship_basic_damage_profile(id,1);
register_shipfx(id); // Register with the shipfx manager
create_collision_profile(id);// Collision profile
ai_tourist_setup(id); // AI

ai_thrust_setup(id,c_yellow,make_color_rgb(128,16,16)); // Has engines
ai_thrust_add(id, -31,227,0,  2, 0.5,0.5, 0.5,0.5,1, 1,0.6,1, 3);
ai_thrust_add(id,   0,231,0,  1, 0.5,0.5, 0.5,0.5,1, 1,0.5,1, 3);
ai_thrust_add(id,  27,227,0,  1, 0.5,0.5, 0.5,0.5,1, 1,0.4,1, 3);

hardpoints=15;
mount_hardpoint(
 id,0, 0, -346,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,1, 0, -320,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,2, 0, -296,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,3, 0, -270,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,4, 0, -244,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,5,-175,-7,0,s_tinytur_28,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,6,163,-7,0,s_tinytur_28,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,7,-39,142,0,s_turret1,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,8, 39,142,0,s_turret1,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,9,40,63,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,10,30,10,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,11,19,-43,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,12,-42,63,0,s_tinytur_28,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,13,-32,10,0,s_tinytur_28,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,14,-19,-43,0,s_tinytur_28,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);


// Lights
lights=17;
mount_light(id, 0, 0, 122,c_lime,   2, 1.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.15,0.00); // Fan lights
mount_light(id, 1, 0, 114,c_red,    2, 2.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.35,1.35);
mount_light(id, 2, 0,  33,c_lime,   2,10.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.15,0.70); // Rear
mount_light(id, 3, 0,   0,c_red,    4, 0.4, s_whiteflare,  5,0,0.01,0,bm_add,  0, 0.35,2.0); // Cone lights
mount_light(id, 4, 0,-127,c_orange, 4, 5.0, s_whiteflare,  5,0,0.01,0,bm_add,  0, 0.20,2.0);
mount_light(id, 5, 0,-148,c_red,    4,10.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.5,0.0); // Panel Lights
mount_light(id, 6, 0,-167,c_lime,   4,2.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.15,5.0); 

mount_light(id, 7,-136, 18,c_red,  4,20.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.5,0.0);
mount_light(id, 8,-124, 18,c_red,  4,20.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.5,2.0);
mount_light(id, 9,-104, 18,c_red,  4,20.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.5,4.0);

mount_light(id,10, 132, 18,c_red,  4,20.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.5,0.0);
mount_light(id,11, 118, 18,c_red,  4,20.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.5,2.0);
mount_light(id,12,  98, 18,c_red,  4,20.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.5,4.0);

mount_light(id,13, 145, 79,c_white, 19, 4.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.5,1.0); // Cone lights
mount_light(id,14,-150, 79,c_white, 19, 4.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.5,2.0);
mount_light(id,15,-148,114,c_white, 19, 4.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.5,3.0); // Panel Lights
mount_light(id,16, 143,114,c_white, 19, 4.0, s_lights_add,  6,0,0.01,0,bm_add,  0, 0.5,4.0); 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo != noone ) {
 with (targetinfo) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai_tourist_ship_step(id);

check_instance_messages(id);

lasthit+=1;

// Collision
collision_damage(id);

if ( hitpoints &lt;= 0 ) {
 if ( !dying ) {
  dying=true;
   // Eject Lifeboats
   // Explode
  request_explosion(x,y,0);
  request_explosion(x,y,2);
  request_explosion(x,y,3);
  request_explosions(x,y,1,256+64,10+random(10),512,30,5);
//  5.0,0.75,
//  2.0
//  );
  lifespan=sprite_get_number(s_huge_explosion);
 }
 if ( random(100) &lt; 3 ) {
  request_explosions(x,y,1,lifespan+64,random(10),512,15,5);
 }
 lifespan-=1;
 if ( lifespan &lt;= 0 ) dead=true;
 else 
 alpha=lifespan/(sprite_get_number(s_huge_explosion));
} 

// Stop the overload
if ( overloadspeed &gt; 2 ) overloadspeed-=overloadspeeddecrease;
if ( overloading &gt; 0 ) overloading-=overloaddecrease;

// Drift
direction+=turning;

// Turning
image_angle=direction;

// Move position based on velocity
move(id);

// Thrusting
ai_thrust(id);

// Die
if ( dead ) instance_destroy();
else update_shipfx(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo != noone ) {
 with ( targetinfo ) instance_destroy();
 targetinfo=noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo == noone ) {
 targetinfo=instance_create(x+(screenw/4),y-(screenh/2),o_targetinfo);
 targetinfo.target=id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the HUD overlay
screen_translate(x,y);
if ( lasthit &lt; statusdelay and hitpoints&gt;0 ) {
 var p,h,percent,ofs;
 p=(statusdelay-lasthit)/statusdelay;
 h=sprite_get_height(sprite);
 if ( global.screen_y &gt; global.cy ) ofs=-h/2; else ofs=h/2;
 if ( shields&gt;0 ) {
  percent=shields/totalshields;
  draw_bargraph(global.screen_x-h/2,global.screen_y+ofs,"",percent,h,c_blue,p);
 } else {
  percent=hitpoints/totallife;
  draw_bargraph(global.screen_x-h/2,global.screen_y+ofs,"",percent,h,damage_color(percent),p);
 }
}
draw_set_color(c_orange);
draw_text(20,30,int(moving_to_x)+","+int(moving_to_y)+":"+int(destination.id));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Render hull
draw_sprite_ext(sprite,0,x,y,scale,scale,image_angle,color,alpha);
render_damage_overlay(id);

// Render Hardpoints
update_hardpoints(id);
render_hardpoints(id);

// Draw running lights
render_lights(id);

render_thrusters(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>110,222</point>
    <point>194,194</point>
  </PhysicsShapePoints>
</object>
