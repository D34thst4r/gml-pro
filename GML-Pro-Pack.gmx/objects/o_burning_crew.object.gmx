<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_corpses</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>corpse=random(sprite_get_number(s_corpses));
spd=0.1+2.0*random(1)+random(1);
dx=0;
dy=0;
angle=random(2)*pi;
event_user(1);
corpseAngle=0.0;
spin=0.1+0.5*random(1)+random(0.5);
duration=20*60;
out=18*60;
frame=0;
expired=0;
alpha=0.0;
scale=0.0;
scaleDelta=0.01;
delay=20;
playedsound=false;
secondScream=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( delay &lt;= 0 ) {
 if ( scale &lt; 1.0 ) {
  scale+=scaleDelta;
  alpha+=scaleDelta;
 }
 if ( expired &gt;= duration ) {
  instance_destroy();
 }
 if ( frame == 0 ) {
  if ( random(100) &lt; 5 ) event_user(2);
 }
 frame+=1;
 if ( frame &gt;= sprite_get_number(s_fireball) ) frame=0;
 x+=dx;
 y+=dy;
 corpseAngle+=spin;
 expired+=1;
 if ( expired &gt;= out ) {
  alpha=1.0-(expired-out)/(duration-out);
  if ( secondScream == false ) {
   if ( random(100) &lt; 0.01 ) {
    playedsound=true;
    secondScream=true;
    if ( random(100) &lt; 0.05 ) {
     audio_play_sound(sfx_scream_special,100,0);
    }
   }
  }
 }
} else delay-=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sfx=real(int(random(13)));
if ( sfx == 1 ) {
 audio_play_sound(sfx_scream1,100,0);
} else if ( sfx == 2 ) {
 audio_play_sound(sfx_scream2,100,0);
} else if ( sfx == 3 ) {
 audio_play_sound(sfx_scream3,100,0);
} else if ( sfx == 4 ) {
 audio_play_sound(sfx_scream4,100,0);
} else if ( sfx == 5 ) {
 audio_play_sound(sfx_scream5,100,0);
} else if ( sfx == 6 ) {
 audio_play_sound(sfx_scream6,100,0);
} else if ( sfx == 7 ) {
 audio_play_sound(sfx_scream7,100,0);
} else if ( sfx == 8 ) {
 audio_play_sound(sfx_scream8,100,0);
} else if ( sfx == 9 ) {
 audio_play_sound(sfx_scream9,100,0);
} else if ( sfx == 10 ) {
 audio_play_sound(sfx_scream10,100,0);
} else if ( sfx == 11 ) {
 audio_play_sound(sfx_scream11,100,0);
} else if ( sfx == 12 ) {
 audio_play_sound(sfx_scream12,100,0);
} else {
 audio_play_sound(sfx_scream13,100,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Updates dx,dy by angle
dx=spd*cos(angle);
dy=spd*sin(angle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(s_fireball,frame,x,y,scale,scale,radtodeg(norm_rad(angle))-90,c_white,alpha);
draw_sprite_ext(s_corpses,corpse,x,y,scale,scale,corpseAngle,c_white,alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
