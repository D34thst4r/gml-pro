<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10001</depth>
  <persistent>0</persistent>
  <parentName>o_player</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spread=2000.0;
count=400;
bgcolor=color_fuzzy(0,16,0,16,0,64);
bgcolor2=color_fuzzy(0,16,0,16,0,64);
var i;
i=0;
for ( i=0; i&lt;count; i++ ) {
 star[i]=s_any(s_lights_trans);
 star_x[i]=(random(2)-1)*spread;
 star_y[i]=(random(2)-1)*spread;
 star_layer[i]=number_range(1,10);
 star_a[i]=0.0; // alpha
 star_t[i]=number_range(0,88); // tween
 star_s[i]=0.005+0.1*random(1)/(10-star_layer[i]);
 star_c[i]=c_white; 
 if ( star_s[i] &gt; 2.3 ) star_t[i]=43;
}
px=0;
py=0;
dx=0;
dy=0;
expired=0.0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>expired+=1/room_speed;
while ( expired &gt; 3.0 ) expired-=3.0;
var i;
for ( i=0; i&lt;count; i++ ) {
 star_a[i]=tween(star_t[i],expired/3.0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for ( i=0; i&lt;count; i++ ) {
 star_x[i]+=dx/star_layer[i];
 while ( star_x[i] &gt; spread ) star_x[i]-=2*spread;
 while ( star_x[i] &lt; -spread ) star_x[i]+=2*spread;
 star_y[i]+=dy/star_layer[i];
 while ( star_y[i] &gt; spread ) star_y[i]-=2*spread;
 while ( star_y[i] &lt; -spread ) star_y[i]+=2*spread;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle_color(px-spread,py-spread,px+spread,py+spread,
 bgcolor,bgcolor2,bgcolor,bgcolor2,
 false
);
var i;
for ( i=0; i&lt;count; i++ ) {
 draw_sprite_ext(s_lights_trans,star[i],
  px+star_x[i],
  py+star_y[i],
  star_s[i],star_s[i],
  star_x[i]+star_y[i],
  star_c[i],star_a[i]);
 if ( star_layer[i] &gt; 5 ) {
 draw_sprite_ext(s_lights_trans,star[i],
  px+star_x[i],
  py+star_y[i],
  star_s[i]*0.8,star_s[i]*0.8,
  star_x[i]+star_y[i],
  star_c[i],1.0);
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
