<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_chronodila_cruiser</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>o_uberparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ship_setup(id,s_chronodila_cruiser,s_chronodila_cruiser_sub,"Chronodila Cruiser");

hitpoints=1000;
totallife=1000;
maxvelocity=4;
accel=0.01;
decel=0.05;
cargo=30;
cargo_capacity=60;
crew=mincrew+(random(6)-3);
setup_cargo(id);

ship_basic_damage_profile(id,1);
register_shipfx(id); // Register with the shipfx manager
create_collision_profile(id);// Collision profile
ai_tourist_setup(id); // AI

ai_thrust_setup(id, make_color_rgb(0,0,128), c_white);
ai_thrust_add(id,-152,157, 0, 4,2,0.5, 3,1,1, 1,0.8,1, 3);
ai_thrust_add(id, 152,157, 0, 4,2,0.5, 3,1,1, 1,0.8,1, 3);
ai_thrust_add(id,   0,-48,-3, 4,2,0.5, 3,1,1, 1,0.8,1, 3);
ai_thrust_add(id, -12,-32, 0, 4,2,0.5, 3,1,1, 1,0.8,1, 3);
ai_thrust_add(id,  12,-32, 3, 4,2,0.5, 3,1,1, 1,0.8,1, 3);

hardpoints=12;
mount_hardpoint(
 id,0,-98,-101,0,s_medtur_14,0,2,45+90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,1,-149,7,0,s_tinytur_44,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,2,146,7,0,s_tinytur_44,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,3,-147,92,0,s_tinytur_44,0,2,-90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,4,149,92,0,s_tinytur_44,0,1,-90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,5,-60,-107,0,s_tinytur_12,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,6, 60,-107,0,s_tinytur_12,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,7,-60,-77,0,s_tinytur_12,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,8, 60,-77,0,s_tinytur_12,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,9,-60,-47,0,s_tinytur_12,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,10,60,-47,0,s_tinytur_12,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,11,94,-101,0,s_medtur_14,0,2,90.0-45,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

// Lights
lights=13;
mount_light(id,0,  -4,-108,make_color_rgb(255,192,64),2,1.0, s_lights_add, 6,0, 0.1,0,bm_add,   0, 0.15,0.00); // Fan lights
mount_light(id,1,   0,-108,make_color_rgb(255,192,64),2,1.0, s_lights_add, 6,0, 0.1,0,bm_add,   0, 0.15,0.35);
mount_light(id,2,   7,-108,make_color_rgb(255,192,64),2,1.0, s_lights_add, 6,0,0.01,0,bm_add,   0, 0.15,0.70); // Rear
mount_light(id,3,  42,-107,c_orange, 4,0.4, s_whiteflare, 15,0,0.01,0,bm_add,   0, 0.25,0.125);
mount_light(id,4, -42,-107,c_orange, 4,0.4, s_whiteflare,  5,0,0.01,0,bm_add,   0, 0.25,2.0); // Cone lights
mount_light(id,5,-122,  54,c_white,  4,3.0, s_whiteflare,  5,0,0.01,0,bm_add,   0, 0.35,2.0);
mount_light(id,6,-122,  54,c_white  ,4,3.0, s_whiteflare,  5,0,0.01,0,bm_add,   0, 0.35,1.0); // Cone lights
mount_light(id,7,-122,  54,c_red,   4,2.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.35,1.0);
mount_light(id,8,-122,  54,c_orange,   4,1.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.35,0.0); // Cone lights
mount_light(id, 9,122,  54,c_white,  4,3.0, s_whiteflare,  5,0,0.01,0,bm_add,   0, 0.35,2.0);
mount_light(id,10,122,  54,c_white  ,4,3.0, s_whiteflare,  5,0,0.01,0,bm_add,   0, 0.35,1.0); // Cone lights
mount_light(id,11,122,  54,c_orange,   4,2.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.35,1.0);
mount_light(id,12,122,  54,c_red,   4,1.0, s_lights_add,  6,0,0.01,0,bm_add,   0, 0.35,0.0); // Cone lights
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo != noone ) {
 with (targetinfo) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai_tourist_ship_step(id);

check_instance_messages(id);

lasthit+=1;

// Collision
collision_damage(id);

if ( hitpoints &lt;= 0 ) {
 if ( !dying ) {
  dying=true;
   // Eject Lifeboats
   // Explode
  request_explosion(x,y,0);
  request_explosion(x,y,2);
  request_explosion(x,y,3);
  request_explosions(x,y,1,256+64,10+random(10),512,30,5);
//  5.0,0.75,
//  2.0
//  );
  lifespan=sprite_get_number(s_huge_explosion);
 }
 if ( random(100) &lt; 3 ) {
  request_explosions(x,y,1,lifespan+64,random(10),512,15,5);
 }
 lifespan-=1;
 if ( lifespan &lt;= 0 ) dead=true;
 else 
 alpha=lifespan/(sprite_get_number(s_huge_explosion));
} 

// Stop the overload
if ( overloadspeed &gt; 2 ) overloadspeed-=overloadspeeddecrease;
if ( overloading &gt; 0 ) overloading-=overloaddecrease;

// Drift
direction+=turning;

// Turning
image_angle=direction;

// Move position based on velocity
move(id);

// Thrusting
ai_thrust(id);

// Die
if ( dead ) instance_destroy();
else update_shipfx(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo != noone ) {
 with ( targetinfo ) instance_destroy();
 targetinfo=noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo == noone ) {
 targetinfo=instance_create(x+(screenw/4),y-(screenh/2),o_targetinfo);
 targetinfo.target=id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the HUD overlay
screen_translate(x,y);
if ( lasthit &lt; statusdelay and hitpoints&gt;0 ) {
 var p,h,percent,ofs;
 p=(statusdelay-lasthit)/statusdelay;
 h=sprite_get_height(sprite);
 if ( global.screen_y &gt; global.cy ) ofs=-h/2; else ofs=h/2;
 if ( shields&gt;0 ) {
  percent=shields/totalshields;
  draw_bargraph(global.screen_x-h/2,global.screen_y+ofs,"",percent,h,c_blue,p);
 } else {
  percent=hitpoints/totallife;
  draw_bargraph(global.screen_x-h/2,global.screen_y+ofs,"",percent,h,damage_color(percent),p);
 }
}
draw_set_color(c_orange);
draw_text(20,30,int(moving_to_x)+","+int(moving_to_y)+":"+int(destination.id));


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i,j,r1,r2,ratio,xw,yh,xofs,yofs,holesize;


// Render hull
draw_sprite_ext(sprite,0,x,y,scale,scale,image_angle,color,alpha);
render_damage_overlay(id);

// Render Hardpoints
update_hardpoints(id);
render_hardpoints(id);

// Draw running lights
render_lights(id);

// Render Thrusters
render_thrusters(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
