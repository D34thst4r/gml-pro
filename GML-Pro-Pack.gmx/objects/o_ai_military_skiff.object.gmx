<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_military_skiff</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>o_uberparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ship_setup(id,s_military_skiff,s_military_skiff_sub,"Military Skiff");

hitpoints=1000;
totallife=1000;
maxvelocity=4;
accel=0.01;
decel=0.05;

cargo=30;
cargo_capacity=60;
mincrew=14;
crew=mincrew+(random(6)-3);
setup_cargo(id);

ship_basic_damage_profile(id,1);
register_shipfx(id); // Register with the shipfx manager
create_collision_profile(id);// Collision profile
ai_patroller_setup(id); // AI

// Thrusters
ai_thrust_setup(id,c_orange,c_blue);
ai_thrust_add(id, -120,172,0, 2,1,0.5, 1.5,0.5,1, 1,0.25,1, 3);
ai_thrust_add(id,  120,172,0, 2,1,0.5, 1.5,0.5,1, 1,0.25,1, 3);
ai_thrust_add(id,  -54,249,0, 2,1,0.5, 1.5,0.5,1, 1,0.25,1, 3);
ai_thrust_add(id,   54,249,0, 2,1,0.5, 1.5,0.5,1, 1,0.25,1, 3);

hardpoints=24;
mount_hardpoint(
 id,0, -120, -95,3,s_turret1,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,1,  66,-171,4,s_tinytur_24,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,2, -66,-171,4,s_tinytur_24,0,2,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,3,  66,-131,5,s_tinytur_24,0,1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,4, -66,-131,5,s_tinytur_24,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,5,  66,-59,3,s_tinytur_15,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,6, -66,-59,3,s_tinytur_15,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,7,  66,-15,5,s_tinytur_19,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,8, -66,-15,5,s_tinytur_19,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,9, -81,42,10,s_tinytur_44,0,o_weapon1,45+90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,10, -47,42,10,s_tinytur_44,0,o_weapon1,90.0-45,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,11,  81,42,10,s_tinytur_44,0,o_weapon1,90.0-45,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,12,  47,42,10,s_tinytur_44,0,o_weapon1,90.0+45,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,13, -81,186,11,s_tinytur_44,0,o_weapon1,90.0+180-45,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,14, -47,186,11,s_tinytur_44,0,o_weapon1,90.0+45+180,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,15,  81,186,11,s_tinytur_44,0,o_weapon1,90.0+45+180,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,16,  47,186,0,s_tinytur_44,0,o_weapon1,90.0-45+180,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,17, -23,100,10,s_tinytur_34,0,o_weapon1,45+90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,18,  23,100,10,s_tinytur_34,0,o_weapon1,90.0-45,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,19,  23,126,10,s_tinytur_34,0,o_weapon1,90.0+45+180,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,20, -23,126,10,s_tinytur_34,0,o_weapon1,90.0-45+180,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,21,  -164,-97,7,s_tinytur_25,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);
mount_hardpoint(
 id,22,   164,-97,7,s_tinytur_25,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);

mount_hardpoint(
 id,23,  120, -95,8,s_turret1,0,o_weapon1,90.0,1.0,c_white,
 bm_add,s_muzzle_flashes,1.0,s_any(s_muzzle_flashes),0
);



// Lights
lights=20;
mount_light(id, 0,-108,124, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.15,0.0); 
mount_light(id, 1, 108,124, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.15,1.0); 

mount_light(id, 2,-106,158, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.2,2.0); 
mount_light(id, 3, 106,158, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.2,3.0); 

mount_light(id, 4, -30,197, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,0.0); 
mount_light(id, 5,  30,197, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,1.0); 

mount_light(id, 6, -30,232, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,2.0); 
mount_light(id, 7,  30,232, c_orange,80, 4.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,3.0); 

mount_light(id, 8, -8,-98, c_red,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,2.0); 
mount_light(id, 9,  8,-98, c_blue,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,2.0); 
mount_light(id,10,-32,-98, c_red,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,1.0); 
mount_light(id,11, 32,-98, c_blue,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,1.0); 
mount_light(id,12,-50,-98, c_red,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,0.0); 
mount_light(id,13, 50,-98, c_blue,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,0.0); 

mount_light(id,14, -8,-98, c_blue,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,0.5); 
mount_light(id,15,  8,-98, c_red,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,0.5); 
mount_light(id,16,-32,-98, c_blue,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,1.5); 
mount_light(id,17, 32,-98, c_red,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,1.5); 
mount_light(id,18,-50,-98, c_blue,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,2.5); 
mount_light(id,19, 50,-98, c_red,80, 3.0, s_lights_add,  6,0, 0.1,0,bm_add,  0, 0.4,2.5); 

// Doohickeys
overlay_y=-175;
overlay_instant=0.0;
overlay_duration=10.0;
overlay_tween=0;

engine_x=70;
engine_y=-18;
engine_instant=0.0;
engine_duration=1.0;

helmsman_pedal_foot=2.0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo != noone ) {
 with (targetinfo) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai_patroller_ship_step(id);

check_instance_messages(id);

lasthit+=1;

// Collision
collision_damage(id);

if ( hitpoints &lt;= 0 ) {
 if ( !dying ) {
  dying=true;
   // Eject Lifeboats
   // Explode
  request_explosion(x,y,0);
  request_explosion(x,y,2);
  request_explosion(x,y,3);
  request_explosions(x,y,1,256+64,10+random(10),512,30,5);
//  5.0,0.75,
//  2.0
//  );
  lifespan=sprite_get_number(s_huge_explosion);
 }
 if ( random(100) &lt; 3 ) {
  request_explosions(x,y,1,lifespan+64,random(10),512,15,5);
 }
 lifespan-=1;
 if ( lifespan &lt;= 0 ) dead=true;
 else 
 alpha=lifespan/(sprite_get_number(s_huge_explosion));
} 

// Stop the overload
if ( overloadspeed &gt; 2 ) overloadspeed-=overloadspeeddecrease;
if ( overloading &gt; 0 ) overloading-=overloaddecrease;

// Drift
direction+=turning;

// Turning
image_angle=direction;

// Move position based on velocity
move(id);

// Thrusting
ai_thrust(id);

// Die
if ( dead ) instance_destroy();
else update_shipfx(id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo != noone ) {
 with ( targetinfo ) instance_destroy();
 targetinfo=noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( targetinfo == noone ) {
 targetinfo=instance_create(x+(screenw/4),y-(screenh/2),o_targetinfo);
 targetinfo.target=id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var alpha;
draw_set_blend_mode(bm_add);

if ( overlay_instant &lt; overlay_duration ) {
 overlay_instant+=1/room_speed;
 if ( overlay_instant &gt;= overlay_duration ) {
  overlay_instant=0.0;
  overlay_tween+=1;
  if ( overlay_tween &gt; 89 ) overlay_tween=0;
 }
}
rotate_point(-degtorad(image_angle),0,overlay_y);
global.script_rotate_point_x+=x;
global.script_rotate_point_y+=y;
alpha=tween(overlay_tween,overlay_instant/overlay_duration);
draw_sprite_ext(s_military_skiff_overlay,0,global.script_rotate_point_x,global.script_rotate_point_y,
 1.0,1.0,image_angle,c_white,alpha);

if ( engine_instant &lt; engine_duration ) {
 engine_instant+=1/room_speed;
 if ( engine_instant &gt;= engine_duration ) engine_instant=0.0;
}
rotate_point(-degtorad(image_angle),engine_x,engine_y);
global.script_rotate_point_x+=x;
global.script_rotate_point_y+=y;
alpha=tween(4,engine_instant/engine_duration);
alpha=0.25+alpha*0.75*(velocity/maxvelocity);
draw_sprite_ext(s_military_skiff_enginelight,0,global.script_rotate_point_x,global.script_rotate_point_y,
 -1.0,1.0,image_angle,c_white,alpha);
rotate_point(-degtorad(image_angle),-engine_x,engine_y);
global.script_rotate_point_x+=x;
global.script_rotate_point_y+=y;
alpha=1.0-tween(4,engine_instant/engine_duration);
alpha=0.25+alpha*0.75*(velocity/maxvelocity);
draw_sprite_ext(s_military_skiff_enginelight,0,global.script_rotate_point_x,global.script_rotate_point_y,
 1.0,1.0,image_angle,c_white,alpha);

draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw the HUD overlay
screen_translate(x,y);
if ( lasthit &lt; statusdelay and hitpoints&gt;0 ) {
 var p,h,percent,ofs;
 p=(statusdelay-lasthit)/statusdelay;
 h=sprite_get_height(sprite);
 if ( global.screen_y &gt; global.cy ) ofs=-h/2; else ofs=h/2;
 if ( shields&gt;0 ) {
  percent=shields/totalshields;
  draw_bargraph(global.screen_x-h/2,global.screen_y+ofs,"",percent,h,c_blue,p);
 } else {
  percent=hitpoints/totallife;
  draw_bargraph(global.screen_x-h/2,global.screen_y+ofs,"",percent,h,damage_color(percent),p);
 }
}

draw_set_font(font_fine);
draw_set_color(c_orange);
if ( valid_instance(destination) ) {
 if ( instance_exists(destination) ) {
  draw_text(global.screen_x+(sprite_get_width(sprite)/2),global.screen_y,
   int(destination.y)+","+int(destination.x)+":"+int(destination.id));
 }
}
draw_text(global.screen_x+(sprite_get_width(sprite)/2),global.screen_y+16,
 int(omoving_to_x)+","+int(omoving_to_y)+":"+int(odestination.id));

if ( valid_instance(attacking) ) {
 draw_text(global.screen_x+(sprite_get_width(sprite)/2),global.screen_y+16+16,
  object_get_name(attacking.object_index)
 );
 draw_text(global.screen_x+(sprite_get_width(sprite)/2),global.screen_y+16+16+16,
  int(attacking.x)+","+int(attacking.y)+":"+int(odestination.id)
 );
} else {
 draw_text(global.screen_x+(sprite_get_width(sprite)/2),global.screen_y+16+16,
  "No offensive target"
 );
}

var i,s;
s="";
for ( i=0; i&lt;hardpoints; i++ ) {
 s+=int(i) + " " + sprite_get_name(mount[i]) + "(" + object_get_name(munitions[i]) + ")" + "#";
 if ( hardpoint_target[i] != noone ) {
  s+=object_get_name(hardpoint_target[i].object_index) + "#";
 }
}
draw_text(global.screen_x+(sprite_get_width(sprite)/2),global.screen_y+64,
 s
);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Render hull
draw_sprite_ext(sprite,0,x,y,scale,scale,image_angle,color,alpha);
render_damage_overlay(id); //Render damage overlay

// Render Hardpoints
update_hardpoints(id);
render_hardpoints(id);

// Draw running lights
render_lights(id);

// Render Thrusters
render_thrusters(id);

event_user(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>186,252</point>
    <point>252,252</point>
  </PhysicsShapePoints>
</object>
